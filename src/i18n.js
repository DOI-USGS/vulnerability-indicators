import { createI18n } from 'vue-i18n';

const userLang = navigator.language || navigator.userLanguage;
const defaultLocale = userLang.startsWith('es') ? 'es' : 'en';

// Function to dynamically load text
async function loadLocaleMessages(locale) {
  try {
    const messages = await import(`@/assets/text/text_${locale}.js`);
    const referencesText = await import(`@/assets/text/referencesText_${locale}.js`);

    return {
      text: messages.default,
      referencesText: referencesText.default,
    };
  } catch (error) {
    console.error(`Error loading locale messages for ${locale}:`, error);
    return {}; // Return an empty object if an error occurs
  }
}

// Create an i18n instance
const i18n = createI18n({
  legacy: false,
  locale: defaultLocale, // Set the initial locale
  fallbackLocale: 'en', // Fallback to English if the locale is not available
  messages: {}, // Empty messages initially
});

// Function to update the locale and load messages dynamically
export async function setLocale(locale) {
  const messages = await loadLocaleMessages(locale);
  i18n.global.setLocaleMessage(locale, messages); // Add messages to the i18n instance
  i18n.global.locale.value = locale; // Set the active locale
}

export default i18n;

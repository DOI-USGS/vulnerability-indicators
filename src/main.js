import './assets/main.css'

import { createApp } from 'vue'
import { createI18n } from 'vue-i18n';
import { createPinia } from 'pinia'
import VueUswds from "vue-uswds"
import { library } from "@fortawesome/fontawesome-svg-core";
import { FontAwesomeIcon } from "@fortawesome/vue-fontawesome";

// Import text files 
import authors_en from '@/assets/text/authors_en.js';
import authors_es from '@/assets/text/authors_es.js';
import referencesText_en from '@/assets/text/referencesText_en.js';
import referencesText_es from '@/assets/text/referencesText_es.js';
import text_en from '@/assets/text/text_en.js';
import text_es from '@/assets/text/text_es.js';

// Detect browser language
const userLang = navigator.language || navigator.userLanguage;
const defaultLocale = userLang.startsWith('es') ? 'es' : 'en';

// Load messages dynamically based on browser language settings
async function loadLocaleMessages(locale) {
  const messages = await import(`@/assets/text/text_${locale}.js`);
  const authors = await import(`@/assets/text/authors_${locale}.js`);
  const referencesText = await import(`@/assets/text/referencesText_${locale}.js`);

  return {
    text: messages.default,
    authors: authors.default,
    referencesText: referencesText.default
  };
}

// Set up Vue I18n with dynamic loading
async function setupI18n(locale) {
  const messages = await loadLocaleMessages(locale);

  const i18n = createI18n({
    legacy: false, // Use the Composition API mode
    locale: locale, // Set the initial locale based on the browser's language
    fallbackLocale: 'en', // Fallback to English if the selected locale is not available
    messages: {
      [locale]: messages
    }
  });

  return i18n;
}

// social icons
import { faSquareXTwitter, faFacebookSquare, faGithub, faFlickr, faYoutubeSquare, faInstagram } from "@fortawesome/free-brands-svg-icons";
library.add(faSquareXTwitter, faFacebookSquare, faGithub, faFlickr, faYoutubeSquare, faInstagram);

import App from './App.vue'
import router from './router'

// Initialize app
async function initApp() {
    const i18n = await setupI18n(defaultLocale);
    const app = createApp(App);
    app.use(i18n);
    app.use(createPinia());
    app.use(VueUswds);
    app.use(router);
    app.component("FontAwesomeIcon", FontAwesomeIcon);
    app.mount('#app');
  }
  
initApp();
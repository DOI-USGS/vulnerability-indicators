import './assets/main.css'

import { createApp } from 'vue'
import App from './App.vue'
import router from './router'
import { createI18n } from 'vue-i18n';
import { createPinia } from 'pinia'
import VueUswds from "vue-uswds"
import { library } from "@fortawesome/fontawesome-svg-core";
import { FontAwesomeIcon } from "@fortawesome/vue-fontawesome";

// Detect browser language
const userLang = navigator.language || navigator.userLanguage;
const defaultLocale = userLang.startsWith('es') ? 'es' : 'en';

// Function to dynamically load locale messages
async function loadLocaleMessages(locale) {
  try {
    const messages = await import(`@/assets/text/text_${locale}.js`);
    const referencesText = await import(`@/assets/text/referencesText_${locale}.js`);

    return {
      text: messages.default,
      referencesText: referencesText.default, // Make sure this line imports referencesText correctly
    };
  } catch (error) {
    console.error(`Error loading locale messages for ${locale}:`, error);
    return {}; // Return empty object if an error occurs
  }
}

// Set up Vue I18n with dynamic loading
async function setupI18n(locale) {
  const messages = await loadLocaleMessages(locale);

  const i18n = createI18n({
    legacy: false,
    locale: locale,  // Set the active locale
    fallbackLocale: 'en',  // Fallback to English if the locale is not available
    messages: {
      [locale]: messages,  // Dynamically load locale messages
    },
  });

  return i18n;
}

// social icons
import { faSquareXTwitter, faFacebookSquare, faGithub, faFlickr, faYoutubeSquare, faInstagram } from "@fortawesome/free-brands-svg-icons";
library.add(faSquareXTwitter, faFacebookSquare, faGithub, faFlickr, faYoutubeSquare, faInstagram);

// Initialize app
async function initApp() {
    const i18n = await setupI18n(defaultLocale);
    const app = createApp(App);
    app.use(i18n);
    app.use(createPinia());
    app.use(VueUswds);
    app.use(router);
    app.component("FontAwesomeIcon", FontAwesomeIcon);
    app.mount('#app');
  }
  
initApp();